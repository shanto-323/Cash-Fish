services:
  postgres:
    image: postgres:latest
    container_name: newPostgres2
    environment:
      POSTGRES_USER: shanto
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: shanto323
    volumes:
      - ./wallet-service/up.sql:/docker-entrypoint-initdb.d/up.sql
    ports:
      - 5432:5432
    restart: on-failure
    networks:
      - my_network

  redis:
    image: redis:8.0.1-alpine
    container_name: cache
    environment:
      - REDIS_PASSWORD=123456
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "6379:6379"
    restart: on-failure
    networks:
      - my_network

  rabbitmq:
    image: rabbitmq:3.13.7-management-alpine
    container_name: new-event-broker
    environment:
      - RABBITMQ_DEFAULT_USER=shanto
      - RABBITMQ_DEFAULT_PASS=123456
    ports:
      - 5672:5672
      - 15672:15672
    restart: on-failure
    networks:
      - my_network

  wallet-service:
    build:
      context: .
      dockerfile: ./wallet-service/wallet.dockerfile
    depends_on:
      - postgres
      - redis
      - rabbitmq
    environment:
      - DATABASE_DSN=postgres://shanto:123456@postgres:5432/shanto323?sslmode=disable
      - REDIS_URL=redis://:123456:@redis:6379/0
      - RABBITMQ_URL=amqp://shanto:123456@rabbitmq:5672/
    ports:
      - 8080:8080
    restart: on-failure
    networks:
      - my_network

  notification-service:
    build:
      context: .
      dockerfile: ./notification-service/app.dockerfile
    depends_on:
      - rabbitmq
    environment:
      - RABBITMQ_URL=amqp://shanto:123456@rabbitmq:5672/
    restart: on-failure
    networks:
      - my_network

networks:
  # Define custom network
  my_network:
    driver: bridge
